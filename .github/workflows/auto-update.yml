name: Auto Update Dependency

on:
  schedule:
    - cron: "0 9 * * *" # every day at 9 AM UTC
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-dep:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Check material-symbols version
        id: check
        run: |
          LATEST=$(npm view material-symbols version)
          CURRENT=$(node -p "require('./package.json').devDependencies['material-symbols']")
          echo "latest=$LATEST" >> $GITHUB_OUTPUT
          echo "current=$CURRENT" >> $GITHUB_OUTPUT

      - name: Stop if already up-to-date
        if: steps.check.outputs.latest == steps.check.outputs.current
        run: echo "Already up-to-date" && exit 0

      - name: Update material-symbols & run code update script
        run: |
          npm install material-symbols@${{ steps.check.outputs.latest }}
          npm run import:all
          npm run build:all

      - name: Commit & tag release
        uses: EndBug/add-and-commit@v9
        with:
          message: "chore(update): update material-symbols to v${{ steps.check.outputs.latest }}"
          default_author: github_actions
          push: true
          tag: v${{ steps.check.outputs.latest }}
          tag_push: '--force'

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.check.outputs.latest }}
          name: "v${{ steps.check.outputs.latest }}"
          body: "Automated update to material-symbols v${{ steps.check.outputs.latest }}"
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          registry-url: "https://registry.npmjs.org"
      - run: npm ci
      - run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}